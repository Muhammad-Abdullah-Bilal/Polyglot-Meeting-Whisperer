{"ast":null,"code":"var _jsxFileName = \"C:\\\\Downloads\\\\Downloads\\\\Polyglot-Meeting-Whisperer\\\\src\\\\components\\\\TranscriptCard.js\";\n// import React from 'react';\n\n// const TranscriptCard = ({ \n//   title, \n//   icon, \n//   transcript, \n//   isLoading, \n//   languageOptions, \n//   selectedLanguage, \n//   onLanguageChange,\n//   showAutoDetect = false \n// }) => {\n//   const iconGradient = title.includes('Original') \n//     ? 'from-orange-400 to-pink-400' \n//     : 'from-blue-400 to-purple-400';\n\n//   return (\n//     <div className=\"glass-card p-6\">\n//       <div className=\"flex items-center gap-3 mb-4\">\n//         <div className={`w-8 h-8 bg-gradient-to-r ${iconGradient} rounded-full flex items-center justify-center`}>\n//           <span className=\"text-white text-sm\">{icon}</span>\n//         </div>\n//         <h2 className=\"text-white text-lg font-semibold\">{title}</h2>\n//       </div>\n\n//       <div className=\"flex flex-wrap gap-2 mb-4\">\n//         {languageOptions.map((lang) => (\n//           <button\n//             key={lang.code}\n//             onClick={() => onLanguageChange(lang.code)}\n//             className={`px-3 py-1 rounded-full text-xs font-medium transition-all ${\n//               selectedLanguage === lang.code \n//                 ? 'bg-emerald-500 text-white' \n//                 : 'bg-white/15 text-white/70 hover:bg-white/25'\n//             }`}\n//           >\n//             {lang.flag} {lang.name}\n//           </button>\n//         ))}\n//         {showAutoDetect && (\n//           <button className=\"px-3 py-1 rounded-full text-xs font-medium bg-white/15 text-white/70 hover:bg-white/25\">\n//             Auto-detect\n//           </button>\n//         )}\n//       </div>\n\n//       <div className=\"min-h-[300px] bg-white/10 rounded-lg p-4\">\n//         {isLoading ? (\n//           <div className=\"space-y-3\">\n//             <div className=\"animate-pulse bg-white/10 h-4 rounded\"></div>\n//             <div className=\"animate-pulse bg-white/10 h-4 rounded w-3/4\"></div>\n//             <div className=\"animate-pulse bg-white/10 h-4 rounded w-1/2\"></div>\n//           </div>\n//         ) : transcript.length ? (\n//           <div className=\"space-y-3\">\n//             {transcript.map((item, i) => (\n//               <div key={i} className=\"text-sm\">\n//                 <div className=\"text-emerald-400 font-medium\">{item.speaker}</div>\n//                 <div className=\"text-white/60 text-xs mb-1\">{item.time}</div>\n//                 <div className=\"text-white\">{item.text}</div>\n//               </div>\n//             ))}\n//           </div>\n//         ) : (\n//           <div className=\"flex items-center justify-center h-full text-white/60 text-center\">\n//             <div>\n//               <div className=\"text-4xl mb-2\">{icon}</div>\n//               <p>No {title.toLowerCase()} yet. Start recording to begin {title.includes('Original') ? 'transcription' : 'translation'}!</p>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default TranscriptCard;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TranscriptCard = ({\n  title,\n  icon,\n  transcript,\n  isLoading,\n  languageOptions,\n  selectedLanguage,\n  onLanguageChange,\n  showAutoDetect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"glass-card transcript-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-selector\",\n      children: [languageOptions.map(lang => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onLanguageChange(lang.code),\n        className: `language-btn ${selectedLanguage === lang.code ? 'active' : ''}`,\n        children: [lang.flag, \" \", lang.name]\n      }, lang.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)), showAutoDetect && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"language-btn\",\n        children: \"Auto-detect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-content\",\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-placeholder\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-line short\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-line medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : transcript.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-list\",\n        children: transcript.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"speaker-name\",\n            children: item.speaker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timestamp\",\n            children: item.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"transcript-text\",\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-icon\",\n          children: icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No transcript yet. Start recording to begin transcription!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = TranscriptCard;\nexport default TranscriptCard;\nvar _c;\n$RefreshReg$(_c, \"TranscriptCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TranscriptCard","title","icon","transcript","isLoading","languageOptions","selectedLanguage","onLanguageChange","showAutoDetect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","lang","onClick","code","flag","name","length","item","i","speaker","time","text","_c","$RefreshReg$"],"sources":["C:/Downloads/Downloads/Polyglot-Meeting-Whisperer/src/components/TranscriptCard.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// const TranscriptCard = ({ \r\n//   title, \r\n//   icon, \r\n//   transcript, \r\n//   isLoading, \r\n//   languageOptions, \r\n//   selectedLanguage, \r\n//   onLanguageChange,\r\n//   showAutoDetect = false \r\n// }) => {\r\n//   const iconGradient = title.includes('Original') \r\n//     ? 'from-orange-400 to-pink-400' \r\n//     : 'from-blue-400 to-purple-400';\r\n\r\n//   return (\r\n//     <div className=\"glass-card p-6\">\r\n//       <div className=\"flex items-center gap-3 mb-4\">\r\n//         <div className={`w-8 h-8 bg-gradient-to-r ${iconGradient} rounded-full flex items-center justify-center`}>\r\n//           <span className=\"text-white text-sm\">{icon}</span>\r\n//         </div>\r\n//         <h2 className=\"text-white text-lg font-semibold\">{title}</h2>\r\n//       </div>\r\n      \r\n//       <div className=\"flex flex-wrap gap-2 mb-4\">\r\n//         {languageOptions.map((lang) => (\r\n//           <button\r\n//             key={lang.code}\r\n//             onClick={() => onLanguageChange(lang.code)}\r\n//             className={`px-3 py-1 rounded-full text-xs font-medium transition-all ${\r\n//               selectedLanguage === lang.code \r\n//                 ? 'bg-emerald-500 text-white' \r\n//                 : 'bg-white/15 text-white/70 hover:bg-white/25'\r\n//             }`}\r\n//           >\r\n//             {lang.flag} {lang.name}\r\n//           </button>\r\n//         ))}\r\n//         {showAutoDetect && (\r\n//           <button className=\"px-3 py-1 rounded-full text-xs font-medium bg-white/15 text-white/70 hover:bg-white/25\">\r\n//             Auto-detect\r\n//           </button>\r\n//         )}\r\n//       </div>\r\n\r\n//       <div className=\"min-h-[300px] bg-white/10 rounded-lg p-4\">\r\n//         {isLoading ? (\r\n//           <div className=\"space-y-3\">\r\n//             <div className=\"animate-pulse bg-white/10 h-4 rounded\"></div>\r\n//             <div className=\"animate-pulse bg-white/10 h-4 rounded w-3/4\"></div>\r\n//             <div className=\"animate-pulse bg-white/10 h-4 rounded w-1/2\"></div>\r\n//           </div>\r\n//         ) : transcript.length ? (\r\n//           <div className=\"space-y-3\">\r\n//             {transcript.map((item, i) => (\r\n//               <div key={i} className=\"text-sm\">\r\n//                 <div className=\"text-emerald-400 font-medium\">{item.speaker}</div>\r\n//                 <div className=\"text-white/60 text-xs mb-1\">{item.time}</div>\r\n//                 <div className=\"text-white\">{item.text}</div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//         ) : (\r\n//           <div className=\"flex items-center justify-center h-full text-white/60 text-center\">\r\n//             <div>\r\n//               <div className=\"text-4xl mb-2\">{icon}</div>\r\n//               <p>No {title.toLowerCase()} yet. Start recording to begin {title.includes('Original') ? 'transcription' : 'translation'}!</p>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TranscriptCard;\r\n\r\n\r\n\r\n\r\nimport React from 'react';\r\n\r\nconst TranscriptCard = ({ \r\n  title, \r\n  icon, \r\n  transcript, \r\n  isLoading, \r\n  languageOptions, \r\n  selectedLanguage, \r\n  onLanguageChange, \r\n  showAutoDetect \r\n}) => {\r\n  return (\r\n    <div className=\"glass-card transcript-card\">\r\n      <div className=\"transcript-header\">\r\n        <div className=\"transcript-icon\">\r\n          <span>{icon}</span>\r\n        </div>\r\n        <h2>{title}</h2>\r\n      </div>\r\n      \r\n      <div className=\"language-selector\">\r\n        {languageOptions.map((lang) => (\r\n          <button\r\n            key={lang.code}\r\n            onClick={() => onLanguageChange(lang.code)}\r\n            className={`language-btn ${selectedLanguage === lang.code ? 'active' : ''}`}\r\n          >\r\n            {lang.flag} {lang.name}\r\n          </button>\r\n        ))}\r\n        {showAutoDetect && (\r\n          <button className=\"language-btn\">\r\n            Auto-detect\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"transcript-content\">\r\n        {isLoading ? (\r\n          <div className=\"loading-placeholder\">\r\n            <div className=\"loading-line\"></div>\r\n            <div className=\"loading-line short\"></div>\r\n            <div className=\"loading-line medium\"></div>\r\n          </div>\r\n        ) : transcript.length ? (\r\n          <div className=\"transcript-list\">\r\n            {transcript.map((item, i) => (\r\n              <div key={i} className=\"transcript-item\">\r\n                <div className=\"speaker-name\">{item.speaker}</div>\r\n                <div className=\"timestamp\">{item.time}</div>\r\n                <div className=\"transcript-text\">{item.text}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"empty-state\">\r\n            <div className=\"empty-icon\">{icon}</div>\r\n            <p>No transcript yet. Start recording to begin transcription!</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TranscriptCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}